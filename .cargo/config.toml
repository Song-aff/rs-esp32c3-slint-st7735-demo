[target.riscv32imc-unknown-none-elf]
runner = "espflash.exe flash --monitor"
#espflash --monitor \target\riscv32imc-unknown-none-elf\release\rs-esp32c3-no-std-st7789-demo
#espflash.exe --monitor \target\riscv32imc-unknown-none-elf\release\rs-esp32c3-no-std-st7789-demo

[env]
ESP_LOGLEVEL="INFO"
[build]
rustflags = [

  "-C", "link-arg=-Tlinkall.x",

  # Required to obtain backtraces (e.g. when using the "esp-backtrace" crate.)
  # NOTE: May negatively impact performance of produced code
  "-C", "force-frame-pointers",

  # # comment the cfgs below if you do _not_ wish to emulate atomics.
  # # enable the atomic codegen option for RISCV
  "-C", "target-feature=+a",
  # # tell the core library have atomics even though it's not specified in the target definition.
  # # NOTE: This is fine for load/store, but we don't support compare-and-swap, so we don't get
  # # full atomic features. For that, atomic_polyfill or the atomic trap handler should be used
  # # instead. But we don't need CAS in the firmware.
 "--cfg", "target_has_atomic_load_store",


  "--cfg", "spi2",


]

target = "riscv32imc-unknown-none-elf"

[unstable]
build-std = ["alloc", "core"]
